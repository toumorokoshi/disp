use super::ast;

pub symbol -> String = [\=\+][a-zA-Z_][a-zA-Z0-9_]* { match_str.to_string() }

pub integer -> i64 = [0-9]+ { match_str.parse().unwrap() }

pub token_list -> Vec<ast::Token> =
  t:token spaces+ tl:token_list {
    let mut new_tokens = Vec::new();
    new_tokens.push(t);
    new_tokens.extend_from_slice(tl);
    new_tokens
  }
  / spaces? t:token spaces? {
    let mut new_tokens = Vec::new();
    new_tokens.push(t);
    new_tokens
  }

pub token -> ast::Token =
      i:integer { ast::Token::Integer(i) }
    / s:symbol { ast::Token::Symbol(s) }
    / "[" tl:token_list "]" { ast::Token::List(tl) }