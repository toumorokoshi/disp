let n (Int (read-line))
let i 0
while (not (eq i n))
	let s (Int (read-line))
	let possible-engines {}
	let j 0
	while (not (eq j s))
		let e (read-line)
		add possible-engines e true
		let j (+ j 1)
	let q (Int (read-line))
	let j 0
	let switches 0
	let seen-engines {}
	while (not (eq j q))
		let e (read-line)
		add seen-engines e true
		match (eq (count seen-engines) (count possible-engines)) {
			true: [
				(let seen-engines {})
				(add seen-engines e true)
				(let switches (+ switches 1))
			],
		}
		let j (+ j 1)
	let i (+ i 1)
	print "Case #"
	print i
	print ": "
	println switches
