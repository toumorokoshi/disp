# disp automatically generates functions for various types
# at compile time. As such, there is no need to specify specific types in
# signatures: if the functions used within the parent function support the
# functions in question, the function will work appropriately.
mut add (fn [l r] [(+ l r)])
mut p (fn [arg] [(print arg)])
p "foo"
p 10
# mut add-and-print (fn [l r] [(mut x (add l r)) (p x)])
# these relationships are preserved recursively. So this will
# fail for any arguments that are not integers.
# add-and-print 11 12
# add_and_print 11 "foo"
